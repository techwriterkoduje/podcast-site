{"pageProps":{"episodeData":{"title":"#65 Tech Writer broni docs as code, czyli klasyczne \"u mnie działa\"","description":"<p>&quot;Docs as code&quot; to filozofia, która głosi, żeby tworzyć dokumentację za pomocą tych samych narzędzi i procesów co oprogramowanie. W zamian za to otrzymujemy szereg benefitów, takich jak lepsza współpraca z programistami, synchronizacja kodu i dokumentacji, wersjonowanie, automatyczne testy oraz ogólne poczucie, że dokumentacja to wspólna odpowiedzialność.</p>\n<p>Czy takie podejście sprawdza się w praktyce? Czy nie są to tylko puste obietnice, których w rzeczywistości nie da się spełnić? W tym odcinku konfrontujemy artykuł &quot;Docs as code is a broken promise&quot; z naszymi własnymi doświadczeniami i przekonaniami. Uwaga, spoiler! Jako żarliwi zwolennicy docs as code, staramy się pokazać, że pomimo wyzwań jakie ze sobą niesie, jest to podejście, które dobrze się sprawdza w świecie dokumentacji do oprogramowania.</p>\n<p><em>Dźwięki wykorzystane w audycji pochodzą z kolekcji &quot;107 Free Retro Game Sounds&quot; dostępnej na stronie <a href=\"https://dominik-braun.net\" target=\"_blank\">https://dominik-braun.net</a>, udostępnianej na podstawie licencji Creative Commons license CC BY 4.0 (<a href=\"https://creativecommons.org/licenses/by/4.0/\" target=\"_blank\">https://creativecommons.org/licenses/by/4.0/</a>).</em></p>\n<p><strong>Informacje dodatkowe:</strong></p>\n<ul>\n <li><strong>&quot;</strong>Docs as code is a broken promise&quot;, Sarah Moir: <a href=\"https://thisisimportant.net/posts/docs-as-code-broken-promise/\" target=\"_blank\">https://thisisimportant.net/posts/docs-as-code-broken-promise/</a></li>\n <li>&quot;Docs as Code&quot;, Write the Docs: <a href=\"https://www.writethedocs.org/guide/docs-as-code/\" target=\"_blank\">https://www.writethedocs.org/guide/docs-as-code/</a></li>\n <li>&quot;Documentation as Code: why you need it and how to get started&quot;, Swimm Team: <a href=\"https://swimm.io/learn/code-documentation/documentation-as-code-why-you-need-it-and-how-to-get-started\" target=\"_blank\">https://swimm.io/learn/code-documentation/documentation-as-code-why-you-need-it-and-how-to-get-started</a></li>\n <li>Git: <a href=\"https://git-scm.com/\" target=\"_blank\">https://git-scm.com/</a></li>\n  <li>Subversion (SVN): <a href=\"https://subversion.apache.org/\" target=\"_blank\">https://subversion.apache.org/</a></li>\n  <li>Mercurial: <a href=\"https://www.mercurial-scm.org/\" target=\"_blank\">https://www.mercurial-scm.org/</a></li>\n  <li>Perforce: <a href=\"https://www.perforce.com/solutions/version-control\" target=\"_blank\">https://www.perforce.com/solutions/version-control</a></li>\n  <li>&quot;What version control systems do you regularly use?&quot;, JetBrains: <a href=\"https://www.jetbrains.com/lp/devecosystem-2023/team-tools/#tools_vcs\" target=\"_blank\">https://www.jetbrains.com/lp/devecosystem-2023/team-tools/#tools_vcs</a></li>\n  <li>&quot;Component content management system (CCMS)&quot;, Wikipedia: <a href=\"https://en.wikipedia.org/wiki/Component_content_management_system\" target=\"_blank\">https://en.wikipedia.org/wiki/Component_content_management_system</a></li>\n  <li>GitLab: <a href=\"https://gitlab.com/\" target=\"_blank\">https://gitlab.com/</a></li>\n  <li>GitHub: <a href=\"https://github.com/\" target=\"_blank\">https://github.com/</a></li>\n  <li>The Zen of Python: <a href=\"https://peps.python.org/pep-0020/#the-zen-of-python\" target=\"_blank\">https://peps.python.org/pep-0020/#the-zen-of-python</a></li>\n  <li>MadCap Flare: <a href=\"https://www.madcapsoftware.com/products/flare/\" target=\"_blank\">https://www.madcapsoftware.com/products/flare/</a></li>\n  <li>Markdown: <a href=\"https://daringfireball.net/projects/markdown/\" target=\"_blank\">https://daringfireball.net/projects/markdown/</a></li>\n  <li>AsciiDoc: <a href=\"https://asciidoc.org/\" target=\"_blank\">https://asciidoc.org/</a></li>\n  <li>Visual Studio Code (VS Code): <a href=\"https://code.visualstudio.com/\" target=\"_blank\">https://code.visualstudio.com/</a></li>\n  <li>Kotlin: <a href=\"https://kotlinlang.org/\" target=\"_blank\">https://kotlinlang.org/</a></li>\n  <li>IntelliJ IDEA: <a href=\"https://www.jetbrains.com/idea/\" target=\"_blank\">https://www.jetbrains.com/idea/</a></li>\n  <li>&quot;Emancipation: Why the heck would a tech writer use enterprise tools?&quot;, Paweł Kowaluk: <a href=\"https://meetcontent.github.io/events/krakow/2024/20\" target=\"_blank\">https://meetcontent.github.io/events/krakow/2024/20</a></li>\n  <li>Docusuarus: <a href=\"https://docusaurus.io/\" target=\"_blank\">https://docusaurus.io/</a></li>\n  <li>GitLens: <a href=\"https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens\" target=\"_blank\">https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens</a></li>\n</ul>\n","blurb":"&quot;Docs as code&quot; to filozofia, która głosi, żeby tworzyć dokumentację za pomocą tych samych narzędzi i procesów co oprogramowanie. W zamian za to otrzym","pubDate":"Mon, 29 Apr 2024 04:40:34 GMT","anchorLink":"https://podcasters.spotify.com/pod/show/docdeveloper/episodes/65-Tech-Writer-broni-docs-as-code--czyli-klasyczne-u-mnie-dziaa-e2isa28","audioUrl":"https://anchor.fm/s/8afba9c/podcast/play/85911048/https%3A%2F%2Fd3ctxlq1ktw2nl.cloudfront.net%2Fstaging%2F2024-3-29%2F00f337d9-7af8-b5df-5642-8fd5a086e369.mp3","episodeNumber":65,"episodeLink":"/blog/2024/4/29/65","duration":"00:44:30"}},"__N_SSG":true}